Input: nums = [2, 7, 11, 15], target = 9
Output: [0, 1] (nums[0] + nums[1] = 2 + 7 = 9)
#---------
#Two Sum
def twoSum(nums, target):
    num_to_index = {}
    for i, num in enumerate(nums):
        complement = target - num
        if complement in num_to_index:
            return [num_to_index[complement], i]
        num_to_index[num] = i
    return None
#-------
#Reverse Integer
def reverse(x):
    if x >= 0:
        result = int(str(x)[::-1])
    else:
        result = -int(str(-x)[::-1])
    return result if -2**31 <= result <= 2**31 - 1 else 0
#-------
#Palindrome Number
def isPalindrome(x):
    return str(x) == str(x)[::-1]
#-------
#Roman to Integer
def romanToInt(s):
    roman_to_int = {
        'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000
    }
    prev_value = 0
    total = 0
    for char in s:
        value = roman_to_int[char]
        if value > prev_value:
            total += value - 2 * prev_value
        else:
            total += value
        prev_value = value
    return total
#------
#Longest Common Prefix
def longestCommonPrefix(strs):
    if not strs:
        return ""
    common_prefix = strs[0]
    for string in strs[1:]:
        while string.find(common_prefix) != 0:
            common_prefix = common_prefix[:-1]
            if not common_prefix:
                return ""
    return common_prefix
#-------
